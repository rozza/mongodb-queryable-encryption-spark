/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import com.mongodb.spark.sql.connector.config.MongoConfig;
import com.mongodb.spark.sql.connector.config.ReadConfig;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Encoders;
import org.apache.spark.sql.SparkSession;

import static java.util.Arrays.asList;

public class App {

    public static void main(String[] args) {

        System.out.println("============================");
        System.out.println("         STARTING");
        System.out.println("============================");
        System.out.println("\n");

        try (SparkSession spark = SparkSession.builder()
                .appName("Client Side Encryption AutoEncryption Demo")
                .master("local[*]")
                .config(MongoConfig.PREFIX + MongoConfig.CLIENT_FACTORY_CONFIG, ClientEncryptionMongoClientFactory.class.getName())
                .config(ReadConfig.WRITE_PREFIX + ReadConfig.DATABASE_NAME_CONFIG, "test")
                .config(ReadConfig.WRITE_PREFIX + ReadConfig.COLLECTION_NAME_CONFIG, "coll")
                .config(ReadConfig.READ_PREFIX + ReadConfig.DATABASE_NAME_CONFIG, "test")
                .config(ReadConfig.READ_PREFIX + ReadConfig.COLLECTION_NAME_CONFIG, "coll")
                .getOrCreate()) {


            Dataset<String> jsonData = spark.createDataset(asList("{\"_id\": 1, \"encryptedField\": \"123456789\"}",
                    "{\"_id\": 2, \"encryptedField\": \"987654321\"}"), Encoders.STRING());

            System.out.println("  > Inserting some data:");
            spark.read().json(jsonData).write().format("mongodb").mode("OVERWRITE").save();

            System.out.println("  > Finding the data:");
            spark.read().format("mongodb").load().show();

            System.out.println("\n  > Finding the data: without mongo-crypt: \n");
            spark.read().format("mongodb")
                    .option(MongoConfig.CLIENT_FACTORY_CONFIG, MongoConfig.CLIENT_FACTORY_DEFAULT).load().show();

        }

        System.out.println("============================");
        System.out.println("         fin.");
        System.out.println("============================");
        System.out.println("\n");
    }
}
